{
  "openapi": "3.0.3",
  "info": {
    "title": "ARCADE Regions",
    "description": "Manages hierarchical structures of groups, regions, and polygons.",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "def-0": {
        "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
        "type": "object",
        "title": "attributes",
        "additionalProperties": {}
      },
      "def-1": {
        "description": "User-defined searchable tags",
        "type": "object",
        "title": "tags",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "def-2": {
        "description": "Coordinates defining a polygon.",
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "description": "Latitude",
                  "type": "number"
                },
                {
                  "description": "Longitude",
                  "type": "number"
                }
              ],
              "additionalItems": false,
              "minItems": 2,
              "maxItems": 2
            }
          }
        },
        "title": "polygon"
      },
      "def-3": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Group.",
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "required": [
          "name"
        ],
        "title": "createGroupRequestBody"
      },
      "def-4": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Group.",
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "title": "editGroupRequestBody"
      },
      "def-5": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique Group ID.",
            "type": "string"
          },
          "name": {
            "description": "The name of the Group.",
            "type": "string"
          },
          "totalArea": {
            "description": "The area of the Group.",
            "type": "number"
          },
          "totalRegions": {
            "description": "The total number of regions under this group.",
            "type": "number"
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "totalArea",
          "totalRegions",
          "createdBy",
          "createdAt"
        ],
        "title": "groupResource"
      },
      "def-6": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-5"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "token": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "groups"
        ],
        "title": "groupList"
      },
      "def-7": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Region.",
            "type": "string"
          },
          "processingConfig": {
            "description": "The processing configuration for the region.",
            "type": "object",
            "properties": {
              "mode": {
                "description": "The region processing mode.",
                "default": "disabled",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "scheduled"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "disabled"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "onNewScene"
                    ]
                  }
                ]
              },
              "scheduleExpression": {
                "description": "The expression that defines when the schedule runs, required when mode is set to scheduled. The following formats are supported.\n\n    at expression - at(yyyy-mm-ddThh:mm:ss)\n\n    rate expression - rate(value unit)\n\n    cron expression - cron(fields)\n\nYou can use at expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use rate and cron expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month.\n\nA cron expression consists of six fields separated by white spaces: (minutes hours day_of_month month day_of_week year).\n\nA rate expression consists of a value as a positive integer, and a unit with the following options: minute | minutes | hour | hours | day | days ",
                "type": "string"
              },
              "scheduleExpressionTimezone": {
                "description": "The timezone in which the scheduling expression is evaluated.",
                "type": "string"
              },
              "priority": {
                "description": "The region processing priority, required for mode is set to 'scheduled' or 'onNewScene'",
                "default": "standard",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "low"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "standard"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "required": [
              "mode"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "required": [
          "name",
          "processingConfig"
        ],
        "title": "createRegionRequestBody"
      },
      "def-8": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Region.",
            "type": "string"
          },
          "processingConfig": {
            "description": "The processing configuration for the region.",
            "type": "object",
            "properties": {
              "mode": {
                "description": "The region processing mode.",
                "default": "disabled",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "scheduled"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "disabled"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "onNewScene"
                    ]
                  }
                ]
              },
              "scheduleExpression": {
                "description": "The expression that defines when the schedule runs, required when mode is set to scheduled. The following formats are supported.\n\n    at expression - at(yyyy-mm-ddThh:mm:ss)\n\n    rate expression - rate(value unit)\n\n    cron expression - cron(fields)\n\nYou can use at expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use rate and cron expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month.\n\nA cron expression consists of six fields separated by white spaces: (minutes hours day_of_month month day_of_week year).\n\nA rate expression consists of a value as a positive integer, and a unit with the following options: minute | minutes | hour | hours | day | days ",
                "type": "string"
              },
              "scheduleExpressionTimezone": {
                "description": "The timezone in which the scheduling expression is evaluated.",
                "type": "string"
              },
              "priority": {
                "description": "The region processing priority, required for mode is set to 'scheduled' or 'onNewScene'",
                "default": "standard",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "low"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "standard"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "required": [
              "mode"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "title": "editRegionRequestBody"
      },
      "def-9": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique Region ID.",
            "type": "string"
          },
          "groupId": {
            "description": "Unique Group ID.",
            "type": "string"
          },
          "name": {
            "description": "The name of the Region.",
            "type": "string"
          },
          "totalArea": {
            "description": "The total area covered by all polygons under this region.",
            "type": "number"
          },
          "totalPolygons": {
            "description": "The total number of polygons under this region.",
            "type": "number"
          },
          "processingConfig": {
            "description": "The processing configuration for the region.",
            "type": "object",
            "properties": {
              "mode": {
                "description": "The region processing mode.",
                "default": "disabled",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "scheduled"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "disabled"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "onNewScene"
                    ]
                  }
                ]
              },
              "scheduleExpression": {
                "description": "The expression that defines when the schedule runs, required when mode is set to scheduled. The following formats are supported.\n\n    at expression - at(yyyy-mm-ddThh:mm:ss)\n\n    rate expression - rate(value unit)\n\n    cron expression - cron(fields)\n\nYou can use at expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use rate and cron expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month.\n\nA cron expression consists of six fields separated by white spaces: (minutes hours day_of_month month day_of_week year).\n\nA rate expression consists of a value as a positive integer, and a unit with the following options: minute | minutes | hour | hours | day | days ",
                "type": "string"
              },
              "scheduleExpressionTimezone": {
                "description": "The timezone in which the scheduling expression is evaluated.",
                "type": "string"
              },
              "priority": {
                "description": "The region processing priority, required for mode is set to 'scheduled' or 'onNewScene'",
                "default": "standard",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "low"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "standard"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "high"
                    ]
                  }
                ]
              }
            },
            "required": [
              "mode"
            ]
          },
          "boundingBox": {
            "description": "The bounding box of the region.",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "groupId",
          "name",
          "totalArea",
          "totalPolygons",
          "processingConfig",
          "createdBy",
          "createdAt"
        ],
        "title": "regionResource"
      },
      "def-10": {
        "type": "object",
        "properties": {
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-9"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "token": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "regions"
        ],
        "title": "regionList"
      },
      "def-11": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Polygon.",
            "type": "string"
          },
          "boundary": {
            "description": "The boundary of the Polygon.",
            "$ref": "#/components/schemas/def-2"
          },
          "exclusions": {
            "description": "Boundaries to be excluded from the Polygon.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-2"
            }
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "required": [
          "name",
          "boundary"
        ],
        "title": "createPolygonRequestBody"
      },
      "def-12": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Polygon.",
            "type": "string"
          },
          "boundary": {
            "description": "The boundary of the Polygon.",
            "$ref": "#/components/schemas/def-2"
          },
          "exclusions": {
            "description": "Boundaries to be excluded from the Polygon.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-2"
            }
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "title": "editPolygonRequestBody"
      },
      "def-13": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique Polygon ID.",
            "type": "string"
          },
          "name": {
            "description": "The name of the Polygon.",
            "type": "string"
          },
          "regionId": {
            "description": "Unique Region ID.",
            "type": "string"
          },
          "groupId": {
            "description": "Unique Group ID.",
            "type": "string"
          },
          "boundary": {
            "description": "The boundary of the Polygon.",
            "$ref": "#/components/schemas/def-2"
          },
          "exclusions": {
            "description": "Boundaries to be excluded from the Polygon.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-2"
            }
          },
          "area": {
            "description": "The area of the Polygon.",
            "type": "number"
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          },
          "state": {
            "$ref": "#/components/schemas/def-17"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "regionId",
          "groupId",
          "boundary",
          "area",
          "createdBy",
          "createdAt"
        ],
        "title": "polygonResource"
      },
      "def-14": {
        "type": "object",
        "properties": {
          "polygons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-13"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "token": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "polygons"
        ],
        "title": "polygonList"
      },
      "def-15": {
        "type": "object",
        "properties": {
          "timestamp": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "required": [
          "timestamp"
        ],
        "title": "createStateRequestBody"
      },
      "def-16": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          }
        },
        "title": "editStateRequestBody"
      },
      "def-17": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique State ID.",
            "type": "string"
          },
          "polygonId": {
            "description": "Unique Polygon ID.",
            "type": "string"
          },
          "regionId": {
            "description": "Unique Region ID.",
            "type": "string"
          },
          "groupId": {
            "description": "Unique Group ID.",
            "type": "string"
          },
          "timestamp": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/def-0"
          },
          "tags": {
            "$ref": "#/components/schemas/def-1"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "polygonId",
          "regionId",
          "groupId",
          "timestamp",
          "createdBy",
          "createdAt"
        ],
        "title": "stateResource"
      },
      "def-18": {
        "type": "object",
        "properties": {
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-17"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "token": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "states"
        ],
        "title": "stateList"
      },
      "def-19": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {}
          },
          "taskType": {
            "type": "string",
            "enum": [
              "create",
              "update"
            ],
            "description": "Task type"
          }
        },
        "required": [
          "items",
          "taskType"
        ],
        "title": "createTaskRequestBody"
      },
      "def-20": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique Polygon Task ID.",
            "type": "string"
          },
          "taskType": {
            "type": "string",
            "enum": [
              "create",
              "update"
            ],
            "description": "Task type"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "waiting",
              "inProgress",
              "success",
              "failure"
            ],
            "description": "Task execution status"
          },
          "statusMessage": {
            "description": "message for the status",
            "type": "string"
          },
          "progress": {
            "description": "total progress of the task",
            "type": "number"
          },
          "batchesTotal": {
            "description": "no. of batches the task has been split into",
            "type": "number"
          },
          "batchesCompleted": {
            "description": "no. of batches the task which have been completed",
            "type": "number"
          },
          "itemsTotal": {
            "description": "total number of items in the task",
            "type": "number"
          },
          "itemsSucceeded": {
            "description": "total number of items succeeded",
            "type": "number"
          },
          "itemsFailed": {
            "description": "no. of items failed",
            "type": "number"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "taskType",
          "taskStatus",
          "itemsTotal",
          "itemsSucceeded",
          "itemsFailed",
          "createdAt",
          "createdBy"
        ],
        "title": "taskResource"
      },
      "def-21": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-20"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "token": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "tasks"
        ],
        "title": "taskList"
      },
      "def-22": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the resource.",
            "type": "string"
          },
          "taskId": {
            "description": "Task id.",
            "type": "string"
          },
          "resourceId": {
            "description": "Unique Resource ID.",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "failure"
            ],
            "description": "Task item state"
          },
          "statusMessage": {
            "description": "failure message",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "taskItemResource"
      },
      "def-23": {
        "type": "object",
        "properties": {
          "taskItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-22"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "token": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              },
              "count": {
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "taskItems"
        ],
        "title": "taskItemList"
      }
    }
  },
  "paths": {
    "/groups": {
      "post": {
        "operationId": "createGroup",
        "summary": "Define a new group",
        "tags": [
          "Groups"
        ],
        "description": "Define a new group.\n\nPermissions:\n- Only `admin` and above may create new groups.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-3"
              },
              "examples": {
                "New group": {
                  "summary": "Create a new group.",
                  "value": {
                    "name": "Berkshire & West LLC"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Group.",
                      "type": "string"
                    },
                    "totalArea": {
                      "description": "The area of the Group.",
                      "type": "number"
                    },
                    "totalRegions": {
                      "description": "The total number of regions under this group.",
                      "type": "number"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "totalArea",
                    "totalRegions",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "New group": {
                    "summary": "New group created successfully.",
                    "value": {
                      "id": "03d66e78d",
                      "name": "Berkshire & West LLC",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "totalArea": 100,
                      "totalRegions": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `name` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listGroups",
        "summary": "List all groups.",
        "tags": [
          "Groups"
        ],
        "description": "List all groups.\n\nPermissions:\n- `readers` may list groups.\n",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Name to filter by."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-5"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "groups"
                  ]
                },
                "examples": {
                  "List of groups": {
                    "summary": "Paginated list of groups.",
                    "value": {
                      "groups": [
                        {
                          "id": "03d66e78d",
                          "name": "Berkshire & West LLC",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "totalArea": 100,
                          "totalRegions": 2
                        },
                        {
                          "id": "jduuye683",
                          "name": "Withom Holdings",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-12T07:34:23.132Z",
                          "updatedBy": "someoneelse@somewhere.com",
                          "totalArea": 100,
                          "totalRegions": 2
                        },
                        {
                          "id": "jf836sd23",
                          "name": "Boondock Manor",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "totalArea": 100,
                          "totalRegions": 2
                        }
                      ],
                      "pagination": {
                        "token": "03d66e78d",
                        "count": 3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "operationId": "getGroup",
        "summary": "Retrieve a group.",
        "tags": [
          "Groups"
        ],
        "description": "Retrieve the details of a group.\n\nPermissions:\n- Only `reader` and above may view groups.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Unique Group ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Group.",
                      "type": "string"
                    },
                    "totalArea": {
                      "description": "The area of the Group.",
                      "type": "number"
                    },
                    "totalRegions": {
                      "description": "The total number of regions under this group.",
                      "type": "number"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "totalArea",
                    "totalRegions",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing group": {
                    "summary": "Group retrieved successfully.",
                    "value": {
                      "id": "03d66e78d",
                      "name": "Berkshire & West LLC",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "totalArea": 100,
                      "totalRegions": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteGroup",
        "summary": "Deletes a group.",
        "tags": [
          "Groups"
        ],
        "description": "Deletes a group.\n\nPermissions:\n- Only `admin` and above may delete groups.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Unique Group ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateGroup",
        "summary": "Update a group.",
        "tags": [
          "Groups"
        ],
        "description": "Update an existing group.\n\nPermissions:\n- Only `admins` may update groups.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-4"
              },
              "examples": {
                "Update group": {
                  "summary": "Update an existing group.",
                  "value": {
                    "name": "Berkshire & West LLC"
                  }
                },
                "Changing tags": {
                  "summary": "Changing the tags of a group.",
                  "value": {
                    "tags": {
                      "tier": "GOLD"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Unique Group ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Group.",
                      "type": "string"
                    },
                    "totalArea": {
                      "description": "The area of the Group.",
                      "type": "number"
                    },
                    "totalRegions": {
                      "description": "The total number of regions under this group.",
                      "type": "number"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "totalArea",
                    "totalRegions",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing group updated successfully": {
                    "summary": "Existing group created successfully.",
                    "value": {
                      "id": "jduuye683",
                      "name": "Withom Holdings",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-12T07:34:23.132Z",
                      "updatedBy": "someoneelse@somewhere.com",
                      "totalArea": 100,
                      "totalRegions": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `formula` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}/regions": {
      "post": {
        "operationId": "createRegion",
        "summary": "Define a new region",
        "tags": [
          "Regions"
        ],
        "description": "Define a new region.\n\nPermissions:\n- Only `admin` and above may create new regions.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-7"
              },
              "examples": {
                "New region": {
                  "summary": "Create a new region.",
                  "value": {
                    "name": "Abshire Harvest",
                    "processingConfig": {
                      "scheduleExpression": "rate(5 days)",
                      "scheduleExpressionTimezone": "Australia/Perth",
                      "mode": "scheduled"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Unique Group ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Region.",
                      "type": "string"
                    },
                    "totalArea": {
                      "description": "The total area covered by all polygons under this region.",
                      "type": "number"
                    },
                    "totalPolygons": {
                      "description": "The total number of polygons under this region.",
                      "type": "number"
                    },
                    "processingConfig": {
                      "description": "The processing configuration for the region.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The region processing mode.",
                          "default": "disabled",
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "scheduled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "disabled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "onNewScene"
                              ]
                            }
                          ]
                        },
                        "scheduleExpression": {
                          "description": "The expression that defines when the schedule runs, required when mode is set to scheduled. The following formats are supported.\n\n    at expression - at(yyyy-mm-ddThh:mm:ss)\n\n    rate expression - rate(value unit)\n\n    cron expression - cron(fields)\n\nYou can use at expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use rate and cron expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month.\n\nA cron expression consists of six fields separated by white spaces: (minutes hours day_of_month month day_of_week year).\n\nA rate expression consists of a value as a positive integer, and a unit with the following options: minute | minutes | hour | hours | day | days ",
                          "type": "string"
                        },
                        "scheduleExpressionTimezone": {
                          "description": "The timezone in which the scheduling expression is evaluated.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The region processing priority, required for mode is set to 'scheduled' or 'onNewScene'",
                          "default": "standard",
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "low"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "standard"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "high"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    },
                    "boundingBox": {
                      "description": "The bounding box of the region.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "groupId",
                    "name",
                    "totalArea",
                    "totalPolygons",
                    "processingConfig",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "New region": {
                    "summary": "New region created successfully.",
                    "value": {
                      "id": "76ghytgt5",
                      "groupId": "sjduwydjd",
                      "name": "Abshire Harvest",
                      "processingConfig": {
                        "scheduleExpression": "rate(5 days)",
                        "scheduleExpressionTimezone": "Australia/Perth",
                        "mode": "scheduled"
                      },
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "totalArea": 100,
                      "totalPolygons": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `name` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "operationId": "listRegions",
        "summary": "List all regions.",
        "tags": [
          "Regions"
        ],
        "description": "List all regions.\n\nPermissions:\n- `readers` may list regions.\n",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Name to filter by."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupId",
            "required": false,
            "description": "Group ID to filter by."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "regions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-9"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "regions"
                  ]
                },
                "examples": {
                  "List of regions": {
                    "summary": "Paginated list of regions.",
                    "value": {
                      "regions": [
                        {
                          "id": "76ghytgt5",
                          "groupId": "sjduwydjd",
                          "name": "Abshire Harvest",
                          "processingConfig": {
                            "scheduleExpression": "rate(5 days)",
                            "scheduleExpressionTimezone": "Australia/Perth",
                            "mode": "scheduled"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "totalArea": 100,
                          "totalPolygons": 2
                        },
                        {
                          "id": "0980yht42",
                          "groupId": "sjduwydjd",
                          "name": "Barrows Meadows",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-12T07:34:23.132Z",
                          "updatedBy": "someoneelse@somewhere.com",
                          "totalArea": 100,
                          "totalPolygons": 2,
                          "processingConfig": {
                            "scheduleExpression": "rate(5 days)",
                            "scheduleExpressionTimezone": "Australia/Perth",
                            "mode": "scheduled"
                          }
                        },
                        {
                          "id": "rrwth876d",
                          "groupId": "sjduwydjd",
                          "name": "Bashirian Paddock",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "totalArea": 100,
                          "totalPolygons": 2,
                          "processingConfig": {
                            "mode": "disabled"
                          }
                        }
                      ],
                      "pagination": {
                        "token": "76ghytgt5",
                        "count": 3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions/{regionId}": {
      "get": {
        "operationId": "getRegion",
        "summary": "Retrieve a region.",
        "tags": [
          "Regions"
        ],
        "description": "Retrieve the details of a region.\n\nPermissions:\n- Only `reader` and above may view regions.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "regionId",
            "required": true,
            "description": "Unique Region ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Region.",
                      "type": "string"
                    },
                    "totalArea": {
                      "description": "The total area covered by all polygons under this region.",
                      "type": "number"
                    },
                    "totalPolygons": {
                      "description": "The total number of polygons under this region.",
                      "type": "number"
                    },
                    "processingConfig": {
                      "description": "The processing configuration for the region.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The region processing mode.",
                          "default": "disabled",
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "scheduled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "disabled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "onNewScene"
                              ]
                            }
                          ]
                        },
                        "scheduleExpression": {
                          "description": "The expression that defines when the schedule runs, required when mode is set to scheduled. The following formats are supported.\n\n    at expression - at(yyyy-mm-ddThh:mm:ss)\n\n    rate expression - rate(value unit)\n\n    cron expression - cron(fields)\n\nYou can use at expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use rate and cron expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month.\n\nA cron expression consists of six fields separated by white spaces: (minutes hours day_of_month month day_of_week year).\n\nA rate expression consists of a value as a positive integer, and a unit with the following options: minute | minutes | hour | hours | day | days ",
                          "type": "string"
                        },
                        "scheduleExpressionTimezone": {
                          "description": "The timezone in which the scheduling expression is evaluated.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The region processing priority, required for mode is set to 'scheduled' or 'onNewScene'",
                          "default": "standard",
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "low"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "standard"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "high"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    },
                    "boundingBox": {
                      "description": "The bounding box of the region.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "groupId",
                    "name",
                    "totalArea",
                    "totalPolygons",
                    "processingConfig",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing region": {
                    "summary": "Region retrieved successfully.",
                    "value": {
                      "id": "76ghytgt5",
                      "groupId": "sjduwydjd",
                      "name": "Abshire Harvest",
                      "processingConfig": {
                        "scheduleExpression": "rate(5 days)",
                        "scheduleExpressionTimezone": "Australia/Perth",
                        "mode": "scheduled"
                      },
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "totalArea": 100,
                      "totalPolygons": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteRegion",
        "summary": "Deletes a region.",
        "tags": [
          "Regions"
        ],
        "description": "Deletes a region.\n\nPermissions:\n- Only `admin` and above may delete regions.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "regionId",
            "required": true,
            "description": "Unique Region ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateRegion",
        "summary": "Update a region.",
        "tags": [
          "Regions"
        ],
        "description": "Update an existing region.\n\nPermissions:\n- Only `admins` may update regions.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-8"
              },
              "examples": {
                "Update region": {
                  "summary": "Update an existing region.",
                  "value": {
                    "name": "Abshire Harvest",
                    "processingConfig": {
                      "scheduleExpression": "rate(5 days)",
                      "scheduleExpressionTimezone": "Australia/Perth",
                      "mode": "scheduled"
                    }
                  }
                },
                "Changing tags": {
                  "summary": "Changing the tags of a region.",
                  "value": {
                    "processingConfig": {
                      "mode": "scheduled",
                      "scheduleExpression": "rate(5 days)",
                      "scheduleExpressionTimezone": "Australia/Perth",
                      "priority": "high"
                    },
                    "tags": {
                      "tier": "GOLD"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "regionId",
            "required": true,
            "description": "Unique Region ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Region.",
                      "type": "string"
                    },
                    "totalArea": {
                      "description": "The total area covered by all polygons under this region.",
                      "type": "number"
                    },
                    "totalPolygons": {
                      "description": "The total number of polygons under this region.",
                      "type": "number"
                    },
                    "processingConfig": {
                      "description": "The processing configuration for the region.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The region processing mode.",
                          "default": "disabled",
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "scheduled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "disabled"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "onNewScene"
                              ]
                            }
                          ]
                        },
                        "scheduleExpression": {
                          "description": "The expression that defines when the schedule runs, required when mode is set to scheduled. The following formats are supported.\n\n    at expression - at(yyyy-mm-ddThh:mm:ss)\n\n    rate expression - rate(value unit)\n\n    cron expression - cron(fields)\n\nYou can use at expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use rate and cron expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month.\n\nA cron expression consists of six fields separated by white spaces: (minutes hours day_of_month month day_of_week year).\n\nA rate expression consists of a value as a positive integer, and a unit with the following options: minute | minutes | hour | hours | day | days ",
                          "type": "string"
                        },
                        "scheduleExpressionTimezone": {
                          "description": "The timezone in which the scheduling expression is evaluated.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The region processing priority, required for mode is set to 'scheduled' or 'onNewScene'",
                          "default": "standard",
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "low"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "standard"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "high"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    },
                    "boundingBox": {
                      "description": "The bounding box of the region.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "groupId",
                    "name",
                    "totalArea",
                    "totalPolygons",
                    "processingConfig",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing region updated successfully": {
                    "summary": "Existing region created successfully.",
                    "value": {
                      "id": "0980yht42",
                      "groupId": "sjduwydjd",
                      "name": "Barrows Meadows",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-12T07:34:23.132Z",
                      "updatedBy": "someoneelse@somewhere.com",
                      "totalArea": 100,
                      "totalPolygons": 2,
                      "processingConfig": {
                        "scheduleExpression": "rate(5 days)",
                        "scheduleExpressionTimezone": "Australia/Perth",
                        "mode": "scheduled"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `formula` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions/{regionId}/polygons": {
      "post": {
        "operationId": "createPolygon",
        "summary": "Define a new polygon",
        "tags": [
          "Polygons"
        ],
        "description": "Define a new polygon.\n\nPermissions:\n- Only `admin` and above may create new polygons.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-11"
              },
              "examples": {
                "New polygon": {
                  "summary": "Create a new polygon.",
                  "value": {
                    "name": "Field 1",
                    "boundary": [
                      [
                        [
                          [
                            -104.5079674,
                            39.9194752
                          ],
                          [
                            -104.4894065,
                            39.9193435
                          ],
                          [
                            -104.4893912,
                            39.9122295
                          ],
                          [
                            -104.5078877,
                            39.9123941
                          ],
                          [
                            -104.5079674,
                            39.9194752
                          ]
                        ]
                      ]
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "regionId",
            "required": true,
            "description": "Unique Region ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Polygon ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Polygon.",
                      "type": "string"
                    },
                    "regionId": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "boundary": {
                      "description": "The boundary of the Polygon.",
                      "$ref": "#/components/schemas/def-2"
                    },
                    "exclusions": {
                      "description": "Boundaries to be excluded from the Polygon.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-2"
                      }
                    },
                    "area": {
                      "description": "The area of the Polygon.",
                      "type": "number"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "state": {
                      "$ref": "#/components/schemas/def-17"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "regionId",
                    "groupId",
                    "boundary",
                    "area",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "New polygon": {
                    "summary": "New polygon created successfully.",
                    "value": {
                      "id": "76ghytgt5",
                      "name": "Field 1",
                      "boundary": [
                        [
                          [
                            [
                              -104.5079674,
                              39.9194752
                            ],
                            [
                              -104.4894065,
                              39.9193435
                            ],
                            [
                              -104.4893912,
                              39.9122295
                            ],
                            [
                              -104.5078877,
                              39.9123941
                            ],
                            [
                              -104.5079674,
                              39.9194752
                            ]
                          ]
                        ]
                      ],
                      "regionId": "htgdjajdhja",
                      "groupId": "jsuueyhdjs8",
                      "area": 175,
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `name` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polygons": {
      "get": {
        "operationId": "listPolygons",
        "summary": "List all polygons.",
        "tags": [
          "Polygons"
        ],
        "description": "List all polygons.\n\nPermissions:\n- `readers` may list polygons.\n",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Name to filter by."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupId",
            "required": false,
            "description": "Group ID to filter by."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "regionId",
            "required": false,
            "description": "Region ID to filter by."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeLatestState",
            "required": false,
            "description": "Include latest state in results."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "polygons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-13"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "polygons"
                  ]
                },
                "examples": {
                  "List of polygons": {
                    "summary": "Paginated list of polygons.",
                    "value": {
                      "polygons": [
                        {
                          "id": "76ghytgt5",
                          "name": "Field 1",
                          "boundary": [
                            [
                              [
                                [
                                  -104.5079674,
                                  39.9194752
                                ],
                                [
                                  -104.4894065,
                                  39.9193435
                                ],
                                [
                                  -104.4893912,
                                  39.9122295
                                ],
                                [
                                  -104.5078877,
                                  39.9123941
                                ],
                                [
                                  -104.5079674,
                                  39.9194752
                                ]
                              ]
                            ]
                          ],
                          "regionId": "htgdjajdhja",
                          "groupId": "jsuueyhdjs8",
                          "area": 175,
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com"
                        },
                        {
                          "id": "0980yht42",
                          "name": "Field 2",
                          "regionId": "htgdjajdhja",
                          "groupId": "jsuueyhdjs8",
                          "boundary": [
                            [
                              [
                                [
                                  -104.4895628,
                                  39.9390518
                                ],
                                [
                                  -104.492009,
                                  39.938295
                                ],
                                [
                                  -104.4926527,
                                  39.9376369
                                ],
                                [
                                  -104.494026,
                                  39.9378015
                                ],
                                [
                                  -104.4971159,
                                  39.9367485
                                ],
                                [
                                  -104.4993046,
                                  39.9345767
                                ],
                                [
                                  -104.4992188,
                                  39.9332933
                                ],
                                [
                                  -104.4999483,
                                  39.931615
                                ],
                                [
                                  -104.4996908,
                                  39.926909
                                ],
                                [
                                  -104.4895199,
                                  39.9268103
                                ],
                                [
                                  -104.4895628,
                                  39.9390518
                                ]
                              ]
                            ]
                          ],
                          "area": 655,
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-12T07:34:23.132Z",
                          "updatedBy": "someoneelse@somewhere.com"
                        }
                      ],
                      "pagination": {
                        "token": "76ghytgt5",
                        "count": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polygons/{polygonId}": {
      "get": {
        "operationId": "getPolygon",
        "summary": "Retrieve a polygon.",
        "tags": [
          "Polygons"
        ],
        "description": "Retrieve the details of a polygon.\n\nPermissions:\n- Only `reader` and above may view polygons.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "polygonId",
            "required": true,
            "description": "Unique Polygon ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Polygon ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Polygon.",
                      "type": "string"
                    },
                    "regionId": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "boundary": {
                      "description": "The boundary of the Polygon.",
                      "$ref": "#/components/schemas/def-2"
                    },
                    "exclusions": {
                      "description": "Boundaries to be excluded from the Polygon.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-2"
                      }
                    },
                    "area": {
                      "description": "The area of the Polygon.",
                      "type": "number"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "state": {
                      "$ref": "#/components/schemas/def-17"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "regionId",
                    "groupId",
                    "boundary",
                    "area",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing polygon": {
                    "summary": "Polygon retrieved successfully.",
                    "value": {
                      "id": "76ghytgt5",
                      "name": "Field 1",
                      "boundary": [
                        [
                          [
                            [
                              -104.5079674,
                              39.9194752
                            ],
                            [
                              -104.4894065,
                              39.9193435
                            ],
                            [
                              -104.4893912,
                              39.9122295
                            ],
                            [
                              -104.5078877,
                              39.9123941
                            ],
                            [
                              -104.5079674,
                              39.9194752
                            ]
                          ]
                        ]
                      ],
                      "regionId": "htgdjajdhja",
                      "groupId": "jsuueyhdjs8",
                      "area": 175,
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deletePolygon",
        "summary": "Deletes a polygon.",
        "tags": [
          "Polygons"
        ],
        "description": "Deletes a polygon.\n\nPermissions:\n- Only `admin` and above may delete polygons.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "polygonId",
            "required": true,
            "description": "Unique Polygon ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updatePolygon",
        "summary": "Update a polygon.",
        "tags": [
          "Polygons"
        ],
        "description": "Update an existing polygon.\n\nPermissions:\n- Only `admins` may update polygons.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-12"
              },
              "examples": {
                "Update polygon": {
                  "summary": "Update an existing polygon.",
                  "value": {
                    "name": "Field 1",
                    "boundary": [
                      [
                        [
                          [
                            -104.5079674,
                            39.9194752
                          ],
                          [
                            -104.4894065,
                            39.9193435
                          ],
                          [
                            -104.4893912,
                            39.9122295
                          ],
                          [
                            -104.5078877,
                            39.9123941
                          ],
                          [
                            -104.5079674,
                            39.9194752
                          ]
                        ]
                      ]
                    ]
                  }
                },
                "Changing tags": {
                  "summary": "Changing the tags of a polygon.",
                  "value": {
                    "tags": {
                      "tier": "GOLD"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "polygonId",
            "required": true,
            "description": "Unique Polygon ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Polygon ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the Polygon.",
                      "type": "string"
                    },
                    "regionId": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "boundary": {
                      "description": "The boundary of the Polygon.",
                      "$ref": "#/components/schemas/def-2"
                    },
                    "exclusions": {
                      "description": "Boundaries to be excluded from the Polygon.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-2"
                      }
                    },
                    "area": {
                      "description": "The area of the Polygon.",
                      "type": "number"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "state": {
                      "$ref": "#/components/schemas/def-17"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "regionId",
                    "groupId",
                    "boundary",
                    "area",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing polygon updated successfully": {
                    "summary": "Existing polygon created successfully.",
                    "value": {
                      "id": "0980yht42",
                      "name": "Field 2",
                      "regionId": "htgdjajdhja",
                      "groupId": "jsuueyhdjs8",
                      "boundary": [
                        [
                          [
                            [
                              -104.4895628,
                              39.9390518
                            ],
                            [
                              -104.492009,
                              39.938295
                            ],
                            [
                              -104.4926527,
                              39.9376369
                            ],
                            [
                              -104.494026,
                              39.9378015
                            ],
                            [
                              -104.4971159,
                              39.9367485
                            ],
                            [
                              -104.4993046,
                              39.9345767
                            ],
                            [
                              -104.4992188,
                              39.9332933
                            ],
                            [
                              -104.4999483,
                              39.931615
                            ],
                            [
                              -104.4996908,
                              39.926909
                            ],
                            [
                              -104.4895199,
                              39.9268103
                            ],
                            [
                              -104.4895628,
                              39.9390518
                            ]
                          ]
                        ]
                      ],
                      "area": 655,
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-12T07:34:23.132Z",
                      "updatedBy": "someoneelse@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `formula` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polygons/{polygonId}/states": {
      "post": {
        "operationId": "createState",
        "summary": "Define a new state",
        "tags": [
          "States"
        ],
        "description": "Define a new state of a polygon.\n\nPermissions:\n- Only `admin` and above may create new states.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-15"
              },
              "examples": {
                "New state": {
                  "summary": "Create a new state.",
                  "value": {
                    "timestamp": "2024-04-15T00:00:00.000Z",
                    "attributes": {
                      "estimatedYield": 1026
                    },
                    "tags": {
                      "plantedAt": "2024-04-15T00:00:00.000Z",
                      "crop": "corn"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "polygonId",
            "required": true,
            "description": "Unique Polygon ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique State ID.",
                      "type": "string"
                    },
                    "polygonId": {
                      "description": "Unique Polygon ID.",
                      "type": "string"
                    },
                    "regionId": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "polygonId",
                    "regionId",
                    "groupId",
                    "timestamp",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "New state": {
                    "summary": "New state created successfully.",
                    "value": {
                      "id": "76ghytgt5",
                      "timestamp": "2024-04-15T00:00:00.000Z",
                      "attributes": {
                        "estimatedYield": 1026
                      },
                      "tags": {
                        "plantedAt": "2024-04-15T00:00:00.000Z",
                        "crop": "corn"
                      },
                      "polygonId": "jutdjshjdksk",
                      "regionId": "eyhdksjdk8js",
                      "groupId": "jsuueyhdjs8",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `name` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/states": {
      "get": {
        "operationId": "listStates",
        "summary": "List all states.",
        "tags": [
          "States"
        ],
        "description": "List all states.\n\nPermissions:\n- `readers` may list states.\n",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "groupId",
            "required": false,
            "description": "Group ID to filter by."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "regionId",
            "required": false,
            "description": "Region ID to filter by."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "polygonId",
            "required": false,
            "description": "Polygon ID to filter by."
          },
          {
            "schema": {
              "default": true,
              "type": "boolean"
            },
            "in": "query",
            "name": "latestOnly",
            "required": false,
            "description": "Returns latest state only."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "states": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-17"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "states"
                  ]
                },
                "examples": {
                  "List of states": {
                    "summary": "Paginated list of states.",
                    "value": {
                      "states": [
                        {
                          "id": "76ghytgt5",
                          "timestamp": "2024-04-15T00:00:00.000Z",
                          "attributes": {
                            "estimatedYield": 1026
                          },
                          "tags": {
                            "plantedAt": "2024-04-15T00:00:00.000Z",
                            "crop": "corn"
                          },
                          "polygonId": "jutdjshjdksk",
                          "regionId": "eyhdksjdk8js",
                          "groupId": "jsuueyhdjs8",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com"
                        },
                        {
                          "id": "0980yht42",
                          "polygonId": "jutdjshjdksk",
                          "regionId": "eyhdksjdk8js",
                          "groupId": "jsuueyhdjs8",
                          "timestamp": "2023-04-11T00:00:00.000Z",
                          "attributes": {
                            "estimatedYield": 925
                          },
                          "tags": {
                            "plantedAt": "2023-04-11T00:00:00.000Z",
                            "harvestedAt": "2023-10-02T00:00:00.000Z",
                            "crop": "corn"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-12T07:34:23.132Z",
                          "updatedBy": "someoneelse@somewhere.com"
                        },
                        {
                          "id": "rrwth876d",
                          "polygonId": "jutdjshjdksk",
                          "regionId": "eyhdksjdk8js",
                          "groupId": "jsuueyhdjs8",
                          "timestamp": "2022-04-11T00:00:00.000Z",
                          "attributes": {
                            "estimatedYield": 879
                          },
                          "tags": {
                            "plantedAt": "2022-04-11T00:00:00.000Z",
                            "harvestedAt": "2022-10-02T00:00:00.000Z",
                            "crop": "corn"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com"
                        }
                      ],
                      "pagination": {
                        "token": "76ghytgt5",
                        "count": 3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/states/{stateId}": {
      "get": {
        "operationId": "getState",
        "summary": "Retrieve a state.",
        "tags": [
          "States"
        ],
        "description": "Retrieve the state of a polygon.\n\nPermissions:\n- Only `reader` and above may view states.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stateId",
            "required": true,
            "description": "Unique State ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique State ID.",
                      "type": "string"
                    },
                    "polygonId": {
                      "description": "Unique Polygon ID.",
                      "type": "string"
                    },
                    "regionId": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "polygonId",
                    "regionId",
                    "groupId",
                    "timestamp",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing state": {
                    "summary": "State retrieved successfully.",
                    "value": {
                      "id": "76ghytgt5",
                      "timestamp": "2024-04-15T00:00:00.000Z",
                      "attributes": {
                        "estimatedYield": 1026
                      },
                      "tags": {
                        "plantedAt": "2024-04-15T00:00:00.000Z",
                        "crop": "corn"
                      },
                      "polygonId": "jutdjshjdksk",
                      "regionId": "eyhdksjdk8js",
                      "groupId": "jsuueyhdjs8",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteState",
        "summary": "Deletes a state.",
        "tags": [
          "States"
        ],
        "description": "Deletes a state.\n\nPermissions:\n- Only `admin` and above may delete states.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stateId",
            "required": true,
            "description": "Unique State ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateState",
        "summary": "Update a state.",
        "tags": [
          "States"
        ],
        "description": "Update an existing state.\n\nPermissions:\n- Only `admins` may update states.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-16"
              },
              "examples": {
                "Update state": {
                  "summary": "Update an existing state.",
                  "value": {
                    "timestamp": "2024-04-15T00:00:00.000Z",
                    "attributes": {
                      "estimatedYield": 1026
                    },
                    "tags": {
                      "plantedAt": "2024-04-15T00:00:00.000Z",
                      "crop": "corn"
                    }
                  }
                },
                "Changing tags": {
                  "summary": "Changing the tags of a state.",
                  "value": {
                    "tags": {
                      "harvestedAt": "2024-10-02T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stateId",
            "required": true,
            "description": "Unique State ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique State ID.",
                      "type": "string"
                    },
                    "polygonId": {
                      "description": "Unique Polygon ID.",
                      "type": "string"
                    },
                    "regionId": {
                      "description": "Unique Region ID.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Unique Group ID.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "tags": {
                      "$ref": "#/components/schemas/def-1"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "polygonId",
                    "regionId",
                    "groupId",
                    "timestamp",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing state updated successfully": {
                    "summary": "Existing state created successfully.",
                    "value": {
                      "id": "0980yht42",
                      "polygonId": "jutdjshjdksk",
                      "regionId": "eyhdksjdk8js",
                      "groupId": "jsuueyhdjs8",
                      "timestamp": "2023-04-11T00:00:00.000Z",
                      "attributes": {
                        "estimatedYield": 925
                      },
                      "tags": {
                        "plantedAt": "2023-04-11T00:00:00.000Z",
                        "harvestedAt": "2023-10-02T00:00:00.000Z",
                        "crop": "corn"
                      },
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-12T07:34:23.132Z",
                      "updatedBy": "someoneelse@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `formula` to be defined but not provided."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use.",
                    "value": {
                      "description": "Name `xyz` already exists."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polygonTasks": {
      "post": {
        "operationId": "createPolygonTask",
        "summary": "Start a task to create polygon in bulk.",
        "tags": [
          "PolygonTasks"
        ],
        "description": "The endpoint allows user to create polygon resource in bulk. Typically used when performing bulk import of resources from external sources such as file.\n\nPermissions:\n- Only `contributor` and above may create new polygon tasks.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-19"
              },
              "examples": {
                "New polygon task": {
                  "summary": "Create a new polygon task.",
                  "value": {
                    "items": [
                      {
                        "name": "Field 1",
                        "regionId": "01j035rmw8817a11j5vy6wgbsb",
                        "boundary": [
                          [
                            -104.5079674,
                            39.9194752
                          ],
                          [
                            -104.4894065,
                            39.9193435
                          ],
                          [
                            -104.4893912,
                            39.9122295
                          ],
                          [
                            -104.5078877,
                            39.9123941
                          ],
                          [
                            -104.5079674,
                            39.9194752
                          ]
                        ]
                      },
                      {
                        "name": "Field 2",
                        "regionId": "01j035rmw8817a11j5vy6wgbsb",
                        "boundary": [
                          [
                            -104.5079674,
                            39.9194752
                          ],
                          [
                            -104.4894065,
                            39.9193435
                          ],
                          [
                            -104.4893912,
                            39.9122295
                          ],
                          [
                            -104.5078877,
                            39.9123941
                          ],
                          [
                            -104.5079674,
                            39.9194752
                          ]
                        ]
                      }
                    ],
                    "taskType": "create"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Polygon Task ID.",
                      "type": "string"
                    },
                    "taskType": {
                      "type": "string",
                      "enum": [
                        "create",
                        "update"
                      ],
                      "description": "Task type"
                    },
                    "taskStatus": {
                      "type": "string",
                      "enum": [
                        "waiting",
                        "inProgress",
                        "success",
                        "failure"
                      ],
                      "description": "Task execution status"
                    },
                    "statusMessage": {
                      "description": "message for the status",
                      "type": "string"
                    },
                    "progress": {
                      "description": "total progress of the task",
                      "type": "number"
                    },
                    "batchesTotal": {
                      "description": "no. of batches the task has been split into",
                      "type": "number"
                    },
                    "batchesCompleted": {
                      "description": "no. of batches the task which have been completed",
                      "type": "number"
                    },
                    "itemsTotal": {
                      "description": "total number of items in the task",
                      "type": "number"
                    },
                    "itemsSucceeded": {
                      "description": "total number of items succeeded",
                      "type": "number"
                    },
                    "itemsFailed": {
                      "description": "no. of items failed",
                      "type": "number"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "taskType",
                    "taskStatus",
                    "itemsTotal",
                    "itemsSucceeded",
                    "itemsFailed",
                    "createdAt",
                    "createdBy"
                  ]
                },
                "examples": {
                  "New polygon task": {
                    "summary": "New polygon task created successfully.",
                    "value": {
                      "id": "01j035rmw8817a11j5vy6wgbsb",
                      "taskStatus": "waiting",
                      "taskType": "create",
                      "statusMessage": "string",
                      "progress": 50,
                      "itemsTotal": 100,
                      "itemsSucceeded": 99,
                      "itemsFailed": 1,
                      "createdAt": "2022-08-30T03:18:26.809Z",
                      "createdBy": "someone@somewhere"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected array to not be empty."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listPolygonTasks",
        "summary": "List all polygon tasks.",
        "tags": [
          "PolygonTasks"
        ],
        "description": "List all polygon tasks.\n\nPermissions:\n- `readers` may list polygon tasks.\n",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-20"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "tasks"
                  ]
                },
                "examples": {
                  "List of polygons": {
                    "summary": "Paginated list of polygons.",
                    "value": {
                      "tasks": [
                        {
                          "id": "01j035rmw8817a11j5vy6wgbsb",
                          "taskStatus": "waiting",
                          "taskType": "create",
                          "statusMessage": "string",
                          "progress": 50,
                          "itemsTotal": 100,
                          "itemsSucceeded": 99,
                          "itemsFailed": 1,
                          "createdAt": "2022-08-30T03:18:26.809Z",
                          "createdBy": "someone@somewhere"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polygonTasks/{taskId}": {
      "get": {
        "tags": [
          "Polygon Task"
        ],
        "description": "Retrieve details of an polygon task",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Unique Polygon Task ID."
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/def-20"
                },
                "examples": {
                  "Existing Polygon Task": {
                    "summary": "Polygon Task Details",
                    "value": {
                      "id": "01j035rmw8817a11j5vy6wgbsb",
                      "taskStatus": "waiting",
                      "taskType": "create",
                      "statusMessage": "string",
                      "progress": 50,
                      "itemsTotal": 100,
                      "itemsSucceeded": 99,
                      "itemsFailed": 1,
                      "createdAt": "2022-08-30T03:18:26.809Z",
                      "createdBy": "someone@somewhere"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/polygonTasks/{taskId}/taskItems": {
      "get": {
        "operationId": "listPolygonTaskItems",
        "tags": [
          "Polygon Task Items"
        ],
        "description": "Lists polygons task items",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromName",
            "required": false,
            "description": "Id to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "filter by status of the tasks, i.e. success, failure"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/def-23"
                },
                "examples": {
                  "List of task items": {
                    "summary": "Paginated list of polygon task items",
                    "value": {
                      "taskItems": [
                        {
                          "name": "testPolygon"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polygonTasks/{taskId}/taskItems/{name}": {
      "get": {
        "tags": [
          "Task Item"
        ],
        "description": "Retrieve details of an polygon task item in an activity task",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the resource."
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/def-22"
                },
                "examples": {
                  "Existing Polygon Task Item": {
                    "summary": "Polygon Task Item Details",
                    "value": {
                      "name": "testPolygon"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/polygonTasks/{id}": {
      "delete": {
        "operationId": "deletePolygonTask",
        "summary": "Deletes an polygon task",
        "tags": [
          "Polygon Tasks"
        ],
        "description": "Deletes an polygon task.\n\nPermissions:\n- Only `admin` and above may delete polygon tasks.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique Polygon Task ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/regionTasks": {
      "post": {
        "operationId": "createRegionTask",
        "summary": "Start a task to create region in bulk.",
        "tags": [
          "RegionTasks"
        ],
        "description": "The endpoint allows user to create region resource in bulk. Typically used when performing bulk import of resources from external sources such as file.\n\nPermissions:\n- Only `admin` and above may create new region tasks.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-19"
              },
              "examples": {
                "New region task": {
                  "summary": "Create a new region task.",
                  "value": {
                    "items": [
                      {
                        "groupId": "01j035rmw8817a11j5vy6wgbsb",
                        "name": "region1",
                        "processingConfig": {
                          "mode": "onNewScene"
                        }
                      },
                      {
                        "groupId": "01j035rmw8817a11j5vy6wgbsb",
                        "name": "region2",
                        "processingConfig": {
                          "mode": "disabled"
                        }
                      }
                    ],
                    "taskType": "create"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Polygon Task ID.",
                      "type": "string"
                    },
                    "taskType": {
                      "type": "string",
                      "enum": [
                        "create",
                        "update"
                      ],
                      "description": "Task type"
                    },
                    "taskStatus": {
                      "type": "string",
                      "enum": [
                        "waiting",
                        "inProgress",
                        "success",
                        "failure"
                      ],
                      "description": "Task execution status"
                    },
                    "statusMessage": {
                      "description": "message for the status",
                      "type": "string"
                    },
                    "progress": {
                      "description": "total progress of the task",
                      "type": "number"
                    },
                    "batchesTotal": {
                      "description": "no. of batches the task has been split into",
                      "type": "number"
                    },
                    "batchesCompleted": {
                      "description": "no. of batches the task which have been completed",
                      "type": "number"
                    },
                    "itemsTotal": {
                      "description": "total number of items in the task",
                      "type": "number"
                    },
                    "itemsSucceeded": {
                      "description": "total number of items succeeded",
                      "type": "number"
                    },
                    "itemsFailed": {
                      "description": "no. of items failed",
                      "type": "number"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "taskType",
                    "taskStatus",
                    "itemsTotal",
                    "itemsSucceeded",
                    "itemsFailed",
                    "createdAt",
                    "createdBy"
                  ]
                },
                "examples": {
                  "New region task": {
                    "summary": "New region task created successfully.",
                    "value": {
                      "id": "01j035rmw8817a11j5vy6wgbsb",
                      "taskStatus": "waiting",
                      "taskType": "create",
                      "statusMessage": "string",
                      "progress": 50,
                      "itemsTotal": 100,
                      "itemsSucceeded": 99,
                      "itemsFailed": 1,
                      "createdAt": "2022-08-30T03:18:26.809Z",
                      "createdBy": "someone@somewhere"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected array to not be empty."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listRegionTasks",
        "summary": "List all region tasks.",
        "tags": [
          "Region Tasks"
        ],
        "description": "List all region tasks.\n\nPermissions:\n- `readers` may list region tasks.\n",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "paginationToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-20"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ]
                    }
                  },
                  "required": [
                    "tasks"
                  ]
                },
                "examples": {
                  "List of regions": {
                    "summary": "Paginated list of regions.",
                    "value": {
                      "tasks": [
                        {
                          "id": "01j035rmw8817a11j5vy6wgbsb",
                          "taskStatus": "waiting",
                          "taskType": "create",
                          "statusMessage": "string",
                          "progress": 50,
                          "itemsTotal": 100,
                          "itemsSucceeded": 99,
                          "itemsFailed": 1,
                          "createdAt": "2022-08-30T03:18:26.809Z",
                          "createdBy": "someone@somewhere"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regionTasks/{taskId}": {
      "get": {
        "tags": [
          "Region Task"
        ],
        "description": "Retrieve details of an region task",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Unique Region Task ID."
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/def-20"
                },
                "examples": {
                  "Existing Region Task": {
                    "summary": "Region Task Details",
                    "value": {
                      "id": "01j035rmw8817a11j5vy6wgbsb",
                      "taskStatus": "waiting",
                      "taskType": "create",
                      "statusMessage": "string",
                      "progress": 50,
                      "itemsTotal": 100,
                      "itemsSucceeded": 99,
                      "itemsFailed": 1,
                      "createdAt": "2022-08-30T03:18:26.809Z",
                      "createdBy": "someone@somewhere"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/regionTasks/{taskId}/taskItems": {
      "get": {
        "operationId": "listRegionTaskItems",
        "tags": [
          "Region Task Items"
        ],
        "description": "Lists polygons task items",
        "parameters": [
          {
            "schema": {
              "default": 20,
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": true,
            "description": "Count of results to return, if not specified default to 20"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromName",
            "required": false,
            "description": "Id to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "filter by status of the tasks, i.e. success, failure"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/def-23"
                },
                "examples": {
                  "List of task items": {
                    "summary": "Paginated list of polygon task items",
                    "value": {
                      "taskItems": [
                        {
                          "name": "testPolygon"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regionTasks/{taskId}/taskItems/{name}": {
      "get": {
        "tags": [
          "Task Item"
        ],
        "description": "Retrieve details of an polygon task item in an activity task",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the resource."
          }
        ],
        "x-security-scopes": [
          "admin",
          "contributor",
          "reader"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/def-22"
                },
                "examples": {
                  "Existing Region Task Item": {
                    "summary": "Region Task Item Details",
                    "value": {
                      "name": "testPolygon"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/regionTasks/{id}": {
      "delete": {
        "operationId": "deleteRegionTask",
        "summary": "Deletes an region task",
        "tags": [
          "Region Tasks"
        ],
        "description": "Deletes an region task.\n\nPermissions:\n- Only `admin` and above may delete region tasks.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique Region Task ID."
          },
          {
            "schema": {
              "default": "1.0.0",
              "type": "string"
            },
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version"
          },
          {
            "schema": {
              "default": "application/json",
              "type": "string"
            },
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type"
          }
        ],
        "x-security-scopes": [
          "admin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:30001"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Groups",
      "description": "Groups represent collections of Regions."
    },
    {
      "name": "Regions",
      "description": "Regions represent collections of Polygons."
    },
    {
      "name": "Polygons",
      "description": "Polygons represent a specific geographic location."
    },
    {
      "name": "States",
      "description": "States represent the state of a specific polygon at a specific point in time."
    }
  ]
}