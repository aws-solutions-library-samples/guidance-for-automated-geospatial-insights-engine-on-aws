import { CfnOutput, Stack, StackProps } from 'aws-cdk-lib';
import { StringParameter } from 'aws-cdk-lib/aws-ssm';
import { NagSuppressions } from 'cdk-nag';
import type { Construct } from 'constructs';
import { userPoolIdParameter } from '../shared/cognito.construct.js';
import { UIModule } from './ui.construct.js';

export type UIStackProperties = StackProps & {
	environment: string;
};

export class UIApiStack extends Stack {
	constructor(scope: Construct, id: string, props: UIStackProperties) {
		super(scope, id, props);

		// validation
		this.validateMandatoryParam(props, 'environment');

		const cognitoUserPoolId = StringParameter.fromStringParameterAttributes(this, 'userPoolId', {
			parameterName: userPoolIdParameter(props.environment),
			simpleName: false,
		}).stringValue;

		const uiModule = new UIModule(this, 'UIModule', {
			environment: props.environment,
			cognitoUserPoolId,
		});

		NagSuppressions.addResourceSuppressionsByPath(
			this,
			['/UIModule/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource'],
			[
				{
					id: 'AwsSolutions-IAM4',
					appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
					reason: 'This policy attached to the role is generated by CDK.',
				},
				{
					id: 'AwsSolutions-IAM5',
					appliesTo: ['Resource::*'],
					reason: 'This resource condition in the IAM policy is generated by CDK, this only applies to logs:DeleteRetentionPolicy and logs:PutRetentionPolicy actions.',
				},
			],
			true
		);

		// Used with static site deployment
		// NagSuppressions.addResourceSuppressionsByPath(
		// 	this,
		// 	['/UIModule/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C'],
		// 	[
		// 		{
		// 			id: 'AwsSolutions-IAM5',
		// 			appliesTo: [
		// 				'Action::s3:GetBucket*',
		// 				'Action::s3:GetObject*',
		// 				'Action::s3:List*',
		// 				'Resource::arn:<AWS::Partition>:s3:::cdk-hnb659fds-assets-<AWS::AccountId>-<AWS::Region>/*',
		// 				'Action::s3:Abort*',
		// 				'Action::s3:DeleteObject*',
		// 				'Resource::<UIModuleDeploymentStaticSiteBucket646D525E.Arn>/*',
		// 			],
		// 			reason: 'CDK generated permissions for bucket deployment.',
		// 		},
		// 		{
		// 			id: 'AwsSolutions-IAM4',
		// 			appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
		// 			reason: 'This policy attached to the role is generated by CDK.',
		// 		},
		// 		{
		// 			id: 'AwsSolutions-L1',
		// 			reason: 'CDK generated bucket deployment Lambda.',
		// 		},
		// 	],
		// 	true
		// );

		new CfnOutput(this, `CognitoUserPoolId`, {
			value: cognitoUserPoolId,
		});

		new CfnOutput(this, `CognitoUserPoolWebClientId`, {
			value: uiModule.userPoolClient.userPoolClientId,
		});
	}

	private validateMandatoryParam(props: UIStackProperties, name: string) {
		if (props[name] === undefined) {
			throw new Error(`${name} is required`);
		}
	}
}
