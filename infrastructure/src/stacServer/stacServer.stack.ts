import { Stack, StackProps } from 'aws-cdk-lib';
import type { Construct } from 'constructs';
import { NagSuppressions } from 'cdk-nag';
import { StacServerModule } from "./stacServer.construct.js";

export type StacServerProperties = StackProps & {
	readonly environment: string;
	readonly instanceType: string;
	readonly volumeSize: number;
};

export class StacServerStack extends Stack {
	public stacServerEndpoint: string;
	public stacIngestTopicArn: string;
	public stacApiResourceArn: string;
	public stacApiEndpoint: string;

	constructor(scope: Construct, id: string, props: StacServerProperties) {
		super(scope, id, props);

		const stacServerModule = new StacServerModule(this, 'StacServerModule', {
			environment: props.environment,
			volumeSize: props.volumeSize,
			instanceType: props.instanceType
		});

		this.stacServerEndpoint = stacServerModule.stacServerEndpoint;
		this.stacIngestTopicArn = stacServerModule.stacIngestTopicArn;
		this.stacApiResourceArn = stacServerModule.stacApiResourceArn;
		this.stacApiEndpoint = stacServerModule.stacApiEndpoint;

		NagSuppressions.addResourceSuppressionsByPath(
			this,
			'/StacServerModule/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource',
			[
				{
					id: 'AwsSolutions-IAM4',
					appliesTo: ['Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],
					reason: 'This policy is the one generated by CDK.',
				},
				{
					id: 'AwsSolutions-IAM5',
					appliesTo: ['Resource::*'],
					reason: 'The resource condition in the IAM policy is generated by CDK, this only applies to xray:PutTelemetryRecords and xray:PutTraceSegments actions.',
				},
			],
			true
		);
	}
}
